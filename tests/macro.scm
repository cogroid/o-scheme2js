(define (foo)
   (let ((map (lambda L (print "overloaded map"))))
      (map print '(1 2 3))))
(print "foo")
(foo)

(define (foo2)
   (define (bar)
      (map print '(1 2 3)))
   (define (map . L)
      (print "overloaded map"))
   (bar))
(print "foo2")
(foo2)

(let ((L '(1 2 3 4 5))
      (L2 '(6 7 8 9 10)))
   (print (map! + L L2))
   (print L)
   (for-each print L L2))
